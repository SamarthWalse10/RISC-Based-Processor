`timescale 1ns / 1ps


module prog_mem #(parameter PROG_MEM_WIDTH = 32, parameter PROG_MEM_ADDR_WIDTH = 16)(
    input [PROG_MEM_ADDR_WIDTH-1:0] addr,
    output reg [PROG_MEM_WIDTH-1:0] instr
);

reg [PROG_MEM_WIDTH-1:0] mem[(2**PROG_MEM_ADDR_WIDTH)-1:0];  

//initial begin
//    mem[0] = 32'b00100000010000000000000000000010;  // 00100 00001 00000 00000000000000010     // 20400002
//    mem[1] = 32'b00100000100000000000000000000011;  // 00100 00010 00000 00000000000000011     // 20800003
//    mem[2] = 32'b00100000110000000000000000000001;  // 00100 00011 00000 00000000000000001     // 20C00001
//    mem[3] = 32'b00010001000000100010000000000000;  // 00010 00100 00001 00010 000000000000     // 11022000
//    mem[4] = 32'b00000001010010000011000000000000;  // 00000 00101 00100 00011 000000000000     // 1483000
//    mem[5] = 32'b00001001100010100100000000000000;  // 00001 00110 00101 00100 000000000000     // 98A4000
//    mem[6] = 32'b00001000000010100100000000000000;  // 00001 00000 00101 00100 000000000000     // 80A4000

//    mem[7] = 32'b00111000000000000000000000000100;  // 00111 00000000000 0000000000000100     // 4800000B

//    mem[8] = 32'b00000001110011000101000000000000;  // 00000 00111 00110 00101 000000000000     // 1CC5000
//    mem[9] = 32'b00000010000011100110000000000000;  // 00000 01000 00111 00110 000000000000     // 20E6000
//    mem[10] = 32'b00010001000000100010000000000000;  // 00010 00100 00001 00010 000000000000     // 11022000
//    mem[11] = 32'b00000001010010000011000000000000;  // 00000 00101 00100 00011 000000000000     // 1483000
//    mem[12] = 32'b00101000000101000000000000000000;  // 00101 00000 01010 00000000000000000     // 28140000
//end

initial 
    $readmemb("program.bin", mem);

always @(*) begin
    instr <= mem[addr];
end

endmodule
